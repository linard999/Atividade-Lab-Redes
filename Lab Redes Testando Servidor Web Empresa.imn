node n1 {
    type router
    model host
    network-config {
	hostname Servidor
	!
	interface eth0
	 ip address 192.0.2.10/24
	 ipv6 address 2001:db8:0::10/64
	!
    }
    canvas c1
    iconcoords {203.0 154.0}
    labelcoords {203.0 186.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('webpagegamelight.html', )
	cmdup=('python -m SimpleHTTPServer port 80', )
	meta=Servidor .
	}
    }
    custom-config {
	custom-config-id service:UserDefined:webpagegamelight.html
	custom-command webpagegamelight.html
	config {
	<!DOCTYPE html>
	<html>
	<head>
	<title>Gamelight</title>
	</head>
	<body>
	
	<h1>Página web da Gamelight</h1>
	<p>Em construção! Volte em breve!.</p>
	
	</body>
	</html> 
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n2 {
    type router
    model router
    network-config {
	hostname Roteador
	!
	interface eth1
	 ip address 192.0.3.1/24
	 ipv6 address 2001:db8:1::1/64
	!
	interface eth0
	 ip address 192.0.2.1/24
	 ipv6 address 2001:db8:0::1/64
	!
    }
    canvas c1
    iconcoords {362.0 251.0}
    labelcoords {362.0 283.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n5}
}

node n3 {
    type router
    model PC
    network-config {
	hostname Cliente
	!
	interface eth0
	 ip address 192.0.3.20/24
	 ipv6 address 2001:db8:1::20/64
	!
    }
    canvas c1
    iconcoords {477.0 113.0}
    labelcoords {477.0 145.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('O_Client.py', )
	cmdup=('python O_Client.py', )
	meta=Client .
	}
    }
    custom-config {
	custom-config-id service:UserDefined:O_Client.py
	custom-command O_Client.py
	config {
	
	# Importação da biblioteca de socket
	from socket import *
	
	nomeServidor = '192.0.3.20'
	
	portaServidor = 12000
	
	socketCliente = socket (AF_INET, SOCK_STREAM)
	
	socketCliente.connect ((nomeServidor, portaServidor))
	
	# Python 2
	frase = raw_input ('Informe uma frase em letras minusculas: ')
	
	# Python 3
	frase = input ('Informe uma frase em letras minusculas: ')
	
	socketCliente.send (frase.encode())
	
	fraseModificada = socketCliente.recv (1024)
	
	# Python 2
	# print "Do Servidor: ", fraseModificada
	
	# Python 3
	print ("Do Servidor: ", fraseModificada.decode())
	
	socketCliente.close ()
	
	}
    }
    services {DefaultRoute UserDefined}
}

node n4 {
    type router
    model PC
    network-config {
	hostname Cliente1
	!
	interface eth0
	 ip address 192.0.3.21/24
	 ipv6 address 2001:db8:1::21/64
	!
    }
    canvas c1
    iconcoords {711.0 118.0}
    labelcoords {711.0 150.0}
    interface-peer {eth0 n5}
}

node n5 {
    type lanswitch
    network-config {
	hostname Switch
	!
    }
    canvas c1
    iconcoords {600.0 214.0}
    labelcoords {600.0 238.0}
    interface-peer {e0 n2}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n5}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l4 {
    nodes {n5 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

